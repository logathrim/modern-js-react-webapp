import { Lesson } from "../../types";

export const classesLesson: Lesson = {
  id: 7,
  title: "Classes ‡πÅ‡∏•‡∏∞ OOP",
  duration: "30 ‡∏ô‡∏≤‡∏ó‡∏µ",
  content: `# üèóÔ∏è Classes ‡πÅ‡∏•‡∏∞ OOP ‡πÉ‡∏ô JavaScript

> *"Classes ‡πÉ‡∏ô ES6+ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô OOP ‡πÉ‡∏ô JavaScript ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô"*

## üìù ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ

‚ú® Class Declaration ‡πÅ‡∏•‡∏∞ Expression  
üîÑ Constructor ‡πÅ‡∏•‡∏∞ Methods  
üéØ Inheritance ‡πÅ‡∏•‡∏∞ super  
üí° Static Members  
üîí Private Fields  

## 1. üé® Class Basics

### Class Declaration
- üì¶ ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á class ‡∏î‡πâ‡∏ß‡∏¢ class keyword
- üéØ Constructor method ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö initialization
- üí° Instance methods ‡πÅ‡∏•‡∏∞ properties
- ‚ö°Ô∏è Method definitions

### Class Expression
- üîÑ Named vs Anonymous classes
- üé® First-class citizens
- üí° Hoisting behavior
- üöÄ Dynamic class creation

## 2. üîÑ Inheritance

### Extending Classes
- üìù ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏î‡πâ‡∏ß‡∏¢ extends
- üéØ Method overriding
- üí° super keyword
- ‚ö°Ô∏è Constructor chain

### Advanced Inheritance
- üîÑ Multiple inheritance patterns
- üé® Mixins
- üí° Composition vs Inheritance
- üöÄ Abstract classes

## 3. üîí Advanced Features

### Static Members
- üì¶ Static methods ‡πÅ‡∏•‡∏∞ properties
- üéØ Utility functions
- üí° Singleton pattern
- ‚ö°Ô∏è Factory methods

### Private Fields
- üîí Private properties ‡∏î‡πâ‡∏ß‡∏¢ #
- üéØ Private methods
- üí° Encapsulation
- üöÄ Class fields

> üí° **Pro Tips**: 
> - ‡πÉ‡∏ä‡πâ private fields ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ã‡πà‡∏≠‡∏ô implementation details
> - ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ composition ‡πÅ‡∏ó‡∏ô inheritance ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
> - ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ this ‡πÉ‡∏ô methods`,
  codeExamples: [
    {
      title: "üé® Class Basics ‡πÅ‡∏•‡∏∞ Inheritance",
      language: "javascript",
      code: `// Basic Class
class Animal {
  // Class fields
  #privateField = 'private';
  static species = 'Animal';

  constructor(name) {
    this.name = name;
  }

  speak() {
    return \`\${this.name} makes a sound\`;
  }

  // Private method
  #privateMethod() {
    return 'This is private';
  }

  // Static method
  static createAnimal(name) {
    return new Animal(name);
  }
}

// Inheritance
class Dog extends Animal {
  constructor(name, breed) {
    super(name);
    this.breed = breed;
  }

  speak() {
    return \`\${this.name} barks!\`;
  }

  fetch() {
    return \`\${this.name} fetches the ball\`;
  }
}

// Usage
const dog = new Dog('Rex', 'German Shepherd');
console.log(dog.speak()); // "Rex barks!"
console.log(dog.fetch()); // "Rex fetches the ball"
console.log(Animal.species); // "Animal"`,
    },
    {
      title: "üîí Advanced Class Features",
      language: "javascript",
      code: `// Advanced Class with Private Fields
class BankAccount {
  // Private fields
  #balance = 0;
  #transactions = [];

  // Private static field
  static #bankName = 'Modern Bank';
  
  // Static getter
  static get bankName() {
    return BankAccount.#bankName;
  }

  constructor(initialBalance) {
    this.#balance = initialBalance;
    this.#logTransaction('Initial deposit', initialBalance);
  }

  // Private method
  #logTransaction(type, amount) {
    this.#transactions.push({
      type,
      amount,
      date: new Date()
    });
  }

  // Public methods
  deposit(amount) {
    if (amount <= 0) throw new Error('Invalid amount');
    this.#balance += amount;
    this.#logTransaction('Deposit', amount);
    return this.#balance;
  }

  withdraw(amount) {
    if (amount <= 0) throw new Error('Invalid amount');
    if (amount > this.#balance) {
      throw new Error('Insufficient funds');
    }
    this.#balance -= amount;
    this.#logTransaction('Withdrawal', amount);
    return this.#balance;
  }

  // Getters
  get balance() {
    return this.#balance;
  }

  get transactionHistory() {
    return [...this.#transactions];
  }
}`,
    },
    {
      title: "üöÄ Mixins and Advanced Patterns",
      language: "javascript",
      code: `// Mixin function
const TimestampMixin = {
  getCreatedAt() {
    return this.createdAt;
  },
  
  setCreatedAt() {
    this.createdAt = new Date();
  }
};

const LoggerMixin = {
  log(message) {
    console.log(\`[\${new Date().toISOString()}] \${message}\`);
  }
};

// Apply mixins
function applyMixins(targetClass, ...mixins) {
  mixins.forEach(mixin => {
    Object.getOwnPropertyNames(mixin).forEach(name => {
      targetClass.prototype[name] = mixin[name];
    });
  });
}

// Usage with class
class Task {
  constructor(title) {
    this.title = title;
    this.setCreatedAt();
  }

  complete() {
    this.completed = true;
    this.log(\`Task "\${this.title}" completed\`);
  }
}

applyMixins(Task, TimestampMixin, LoggerMixin);

// Factory pattern
class UserFactory {
  static #roles = {
    admin: AdminUser,
    user: RegularUser
  };

  static createUser(role, data) {
    const UserClass = this.#roles[role];
    if (!UserClass) {
      throw new Error(\`Invalid role: \${role}\`);
    }
    return new UserClass(data);
  }
}`,
    },
  ],
  quiz: [
    {
      id: 1,
      question: "Private fields (#) ‡πÉ‡∏ô JavaScript classes ‡∏°‡∏µ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?",
      options: [
        "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å class",
        "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å child classes",
        "‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏†‡∏≤‡∏¢‡πÉ‡∏ô class ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô",
        "‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö protected ‡πÉ‡∏ô languages ‡∏≠‡∏∑‡πà‡∏ô",
      ],
      correctAnswer: 2,
      explanation:
        "Private fields ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏î‡πâ‡∏ß‡∏¢ # ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏†‡∏≤‡∏¢‡πÉ‡∏ô class ‡∏ô‡∏±‡πâ‡∏ô‡πÜ ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏°‡πâ‡πÅ‡∏ï‡πà‡∏à‡∏≤‡∏Å child classes",
    },
    {
      id: 2,
      question: "super keyword ‡πÉ‡∏ô JavaScript ‡πÉ‡∏ä‡πâ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£?",
      options: [
        "‡πÄ‡∏£‡∏µ‡∏¢‡∏Å constructor ‡∏Ç‡∏≠‡∏á child class",
        "‡πÄ‡∏£‡∏µ‡∏¢‡∏Å methods ‡∏Ç‡∏≠‡∏á current class",
        "‡πÄ‡∏£‡∏µ‡∏¢‡∏Å constructor ‡πÅ‡∏•‡∏∞ methods ‡∏Ç‡∏≠‡∏á parent class",
        "‡∏™‡∏£‡πâ‡∏≤‡∏á instance ‡πÉ‡∏´‡∏°‡πà‡∏Ç‡∏≠‡∏á class",
      ],
      correctAnswer: 2,
      explanation:
        "super keyword ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏Å constructor ‡πÅ‡∏•‡∏∞ methods ‡∏Ç‡∏≠‡∏á parent class ‡πÉ‡∏ô child class ‡πÇ‡∏î‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å super() ‡πÉ‡∏ô constructor ‡∏Ç‡∏≠‡∏á child class ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ this",
    },
    {
      id: 3,
      question: "static members ‡πÉ‡∏ô class ‡∏°‡∏µ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?",
      options: [
        "‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á instance ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
        "‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á class ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á instance",
        "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å instance methods",
        "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö private fields",
      ],
      correctAnswer: 1,
      explanation:
        "static members (methods ‡πÅ‡∏•‡∏∞ properties) ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á class ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á instance ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏à‡∏≤‡∏Å instance methods ‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á",
    },
    {
      id: 4,
      question: "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ Class Expression ‡πÅ‡∏ó‡∏ô Class Declaration?",
      options: [
        "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ hoisting",
        "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á class ‡πÅ‡∏ö‡∏ö dynamic ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô parameter",
        "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ inheritance",
        "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ private fields",
      ],
      correctAnswer: 1,
      explanation:
        "Class Expression ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á class ‡πÅ‡∏ö‡∏ö dynamic ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á class ‡πÄ‡∏õ‡πá‡∏ô parameter ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞ runtime",
    },
  ],
};
