import { Lesson } from '../../types';

export const arrowFunctionsLesson: Lesson = {
  id: 2,
  title: 'Arrow Functions',
  duration: '20 ‡∏ô‡∏≤‡∏ó‡∏µ',
  content: `# üéØ Arrow Functions

> *"Arrow Functions make JavaScript code more concise and maintainable"*

## üìù ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ

‚ú® Syntax ‡∏Ç‡∏≠‡∏á Arrow Functions  
üîÑ ‡∏Ç‡πâ‡∏≠‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å Regular Functions  
üéØ Lexical \`this\` binding  
üí° Use Cases ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°  

## 1. üé® ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô

### Basic Syntax
- üìù ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö‡∏™‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
- üéØ Implicit Return ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö expressions ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
- üí° Multiple Parameters ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö
- üöÄ Single Parameter ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö

### Advanced Syntax
- üîÑ ‡∏Å‡∏≤‡∏£ Return Object Literals
- üé® Destructuring Parameters
- üí° Default Parameters
- ‚ö°Ô∏è Rest Parameters

## 2. üîÑ Lexical this

### ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á this
- üéØ \`this\` ‡∏à‡∏∞‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ï‡∏≤‡∏° scope ‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á
- üîí ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£ bind \`this\` ‡πÉ‡∏´‡∏°‡πà
- üí° ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö Callback Functions
- üé® ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô Class Methods

### ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á
- ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö Methods ‡πÉ‡∏ô Object
- üö´ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô Constructor
- ‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ arguments object
- üéØ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ \`call\`, \`apply\`, \`bind\` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô \`this\`

## 3. üí° Best Practices

### ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ
- ‚úÖ Array Methods (map, filter, reduce)
- ‚úÖ Promise Chains
- ‚úÖ Event Handlers ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ dynamic this
- üéØ Short, single-purpose functions

### ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ
- ‚ùå Object Methods ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ this
- ‚ùå Event Handlers ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ dynamic this
- ‚ùå Constructor Functions
- ‚ö†Ô∏è Methods ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ arguments object

> üí° **Pro Tips**: 
> - ‡πÉ‡∏ä‡πâ Arrow Functions ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ this binding
> - ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ dynamic this
> - ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö functional programming patterns ‡πÄ‡∏ä‡πà‡∏ô map, filter, reduce`,
  codeExamples: [
    {
      title: 'üé® Basic Arrow Function Patterns',
      language: 'javascript',
      code: `// Single parameter (no parentheses needed)
const square = x => x * x;
console.log(square(5)); // 25

// Multiple parameters (require parentheses)
const add = (a, b) => a + b;
console.log(add(2, 3)); // 5

// No parameters (empty parentheses required)
const getRandomNumber = () => Math.random();

// Multiple lines (require curly braces and return)
const getUser = (id) => {
  const user = fetchUser(id);
  return user.name;
};

// Returning object literal (wrap in parentheses)
const createPerson = (name, age) => ({
  name,
  age,
  sayHi: () => \`Hi, I'm \${name}\`
});

// With destructuring and default parameters
const greet = ({ name = 'Guest', age = 0 } = {}) => 
  \`Hello, \${name}! You are \${age} years old.\`;`
    },
    {
      title: 'üîÑ Lexical this Binding Examples',
      language: 'javascript',
      code: `// ‚úÖ Good: Arrow function in class method
class Timer {
  constructor() {
    this.seconds = 0;
    
    // Arrow function preserves this
    setInterval(() => {
      this.seconds++;
      console.log(\`Seconds: \${this.seconds}\`);
    }, 1000);
  }
}

// ‚ùå Bad: Arrow function as object method
const person = {
  name: 'John',
  // This will not work as expected
  sayHi: () => {
    console.log(\`Hi, I'm \${this.name}\`); // this.name is undefined
  }
};

// ‚úÖ Good: Regular function as object method
const betterPerson = {
  name: 'John',
  sayHi() {
    console.log(\`Hi, I'm \${this.name}\`); // Works correctly
  }
};`
    },
    {
      title: 'üí° Practical Use Cases',
      language: 'javascript',
      code: `// Array methods
const numbers = [1, 2, 3, 4, 5];

const doubled = numbers.map(n => n * 2);
const evens = numbers.filter(n => n % 2 === 0);
const sum = numbers.reduce((a, b) => a + b, 0);

// Promise chains
fetchUser(1)
  .then(user => fetchPosts(user.id))
  .then(posts => posts.filter(post => post.likes > 50))
  .catch(error => console.error(error));

// Event listeners
button.addEventListener('click', () => {
  console.log('Clicked!');
});

// Function composition
const compose = (...fns) => x => 
  fns.reduceRight((y, f) => f(y), x);

const addOne = x => x + 1;
const double = x => x * 2;
const addOneAndDouble = compose(double, addOne);`
    }
  ],
  quiz: [
    {
      id: 1,
      question: "Arrow Functions ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å Regular Functions ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?",
      options: [
        "Arrow Functions ‡∏°‡∏µ arguments object ‡πÅ‡∏ï‡πà Regular Functions ‡πÑ‡∏°‡πà‡∏°‡∏µ",
        "Arrow Functions ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô constructor ‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà Regular Functions ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ",
        "Arrow Functions ‡∏°‡∏µ lexical this binding ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ arguments object",
        "Arrow Functions ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ return object ‡πÑ‡∏î‡πâ"
      ],
      correctAnswer: 2,
      explanation: "Arrow Functions ‡∏°‡∏µ lexical this binding (this ‡∏à‡∏∞‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ï‡∏≤‡∏° scope ‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á) ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ arguments object ‡∏ã‡∏∂‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å Regular Functions ‡∏ó‡∏µ‡πà‡∏°‡∏µ dynamic this binding ‡πÅ‡∏•‡∏∞‡∏°‡∏µ arguments object"
    },
    {
      id: 2,
      question: "‡∏Ç‡πâ‡∏≠‡πÉ‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Arrow Function ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î?",
      options: [
        "‡πÄ‡∏õ‡πá‡∏ô method ‡πÉ‡∏ô object",
        "‡πÄ‡∏õ‡πá‡∏ô callback function ‡πÉ‡∏ô array methods",
        "‡πÄ‡∏õ‡πá‡∏ô constructor function",
        "‡πÄ‡∏õ‡πá‡∏ô event handler ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ dynamic this"
      ],
      correctAnswer: 1,
      explanation: "Arrow Functions ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô callback function ‡πÉ‡∏ô array methods ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ this binding ‡πÅ‡∏ö‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡∏Ç‡∏∂‡πâ‡∏ô"
    },
    {
      id: 3,
      question: "‡∏Å‡∏≤‡∏£ return object literal ‡πÉ‡∏ô Arrow Function ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?",
      options: [
        "Return ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö",
        "‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏≠‡∏ö object ‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö",
        "‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ return statement ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô",
        "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ return object literal ‡πÑ‡∏î‡πâ"
      ],
      correctAnswer: 1,
      explanation: "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ return object literal ‡πÉ‡∏ô Arrow Function ‡πÅ‡∏ö‡∏ö implicit return ‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏≠‡∏ö object ‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö ‡πÄ‡∏ä‡πà‡∏ô `() => ({ name: 'John' })` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ JavaScript ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ú‡∏¥‡∏î‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î block scope"
    },
    {
      id: 4,
      question: "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ Arrow Function ‡∏Å‡∏±‡∏ö object method ‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∞‡πÑ‡∏£‡∏Ç‡∏∂‡πâ‡∏ô?",
      options: [
        "this ‡∏à‡∏∞‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ñ‡∏∂‡∏á object ‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏™‡∏°‡∏≠",
        "this ‡∏à‡∏∞‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ñ‡∏∂‡∏á global scope ‡∏´‡∏£‡∏∑‡∏≠ undefined",
        "‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î syntax error",
        "this ‡∏à‡∏∞‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ñ‡∏∂‡∏á parent scope ‡∏Ç‡∏≠‡∏á object"
      ],
      correctAnswer: 3,
      explanation: "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ Arrow Function ‡πÄ‡∏õ‡πá‡∏ô object method, this ‡∏à‡∏∞‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ñ‡∏∂‡∏á parent scope ‡∏Ç‡∏≠‡∏á object (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß object ‡πÄ‡∏≠‡∏á) ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ Arrow Functions ‡∏°‡∏µ lexical this binding"
    }
  ]
};